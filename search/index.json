[{"content":" \u0026lsquo;Hugo的Stack主题美化零碎\u0026rsquo;\n自动添加摘要与副标题 原理: 与创建博客时的名字一样.摘要与副标题\n1 hugo new content post/hugo博客总结/index.md 如何更改:\n位置: dev\\archetypes\\default.md\n将标签添加主页导航与文章内上部 示例图片 点击后可以跳转对应的\n代码 位置: layouts\\partials\\article\\components\\details.html(没有从themes对应的位置复制)\n最底部, \u0026lt;div\u0026gt;标签内\n1 {{ partial \u0026#34;article/components/tags\u0026#34; . }} 参考 是因为先找到了文章内部自带的标签,在最底部,找到了它的位置 themes/layouts/partials/article/components/footer.html(最后更新时间,文章协议),然后将对应位置内容复制到标题头所在位置: layouts\\partials\\article\\components\\details.html(标题,分类,创建时间所在的等)\n成功了\n文章内部,F12找到对应的 内容\n线条动态背景 失败,不搞了\n第一步 下载动态背景\ngithub: 动态线条-驱散\n通过 demo 在浏览器中打开,看看效果\n第二步 位置: dev\\layouts\\_default\\baseof.html\n最外层\n1 2 3 \u0026lt;div id=\u0026#34;particles-js\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://1510882710.github.io/js/particles.js\u0026#34; async=\u0026#34;\u0026#34; \u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://1510882710.github.io/js/app.js\u0026#34; async=\u0026#34;\u0026#34; \u0026gt;\u0026lt;/script\u0026gt; 将下载的动态背景里的particles.js和app.js放到**public/js**内\n位置: particles.js-2.0.0\\particles.js和particles.js-2.0.0\\demo\\js\\app.js\n第三步 位置:\n1 2 3 4 5 6 .particles-js-canvas-el { position:fixed; top:0; left:0; width:100% } 参考博客 博客搭建指南——2 (xrg.fj.cn)\n页面载入动画 删除if后成功了\n第一步 位置: layouts/partials/widget/preload.html(自己创建)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;div id=\u0026#34;loading-box\u0026#34;\u0026gt; \u0026lt;!-- 页面加载完成之后帷幕拉开的效果 --\u0026gt; \u0026lt;div class=\u0026#34;loading-left-bg\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;loading-right-bg\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;!-- 旋转盒子动效 --\u0026gt; \u0026lt;div class=\u0026#34;spinner-box\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;configure-border-1\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;configure-core\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;configure-border-2\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;configure-core\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;loading-word\u0026#34;\u0026gt;加载中...\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- 页面加载动画 --\u0026gt; \u0026lt;script\u0026gt; $(document).ready(function () { document.getElementById(\u0026#39;loading-box\u0026#39;).classList.add(\u0026#34;loaded\u0026#34;) }) \u0026lt;/script\u0026gt; 第二步 位置: layouts/_default/baseof.html (从theme主题复制)\n1 2 3 \u0026lt;!-- 下面这个是新加的 --\u0026gt; {{- partial \u0026#34;widget/preload\u0026#34; . -}} \u0026lt;!-- 下面就是Stack作者原本的代码了 --\u0026gt; 第三步 位置:assets/scss/custom.scss\n最底部添加\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 #loading-box .loading-left-bg, #loading-box .loading-right-bg { position: fixed; z-index: 1000; width: 50%; height: 100%; // 我在这里小改了一下颜色， background-color: #b1c0c7; transition: all 0.5s; } #loading-box .loading-right-bg { right: 0; } #loading-box\u0026gt;.spinner-box { position: fixed; z-index: 1001; display: flex; justify-content: center; align-items: center; width: 100%; height: 100vh; } #loading-box .spinner-box .configure-border-1 { position: absolute; padding: 3px; width: 115px; height: 115px; background: #ffab91; animation: configure-clockwise 3s ease-in-out 0s infinite alternate; } #loading-box .spinner-box .configure-border-2 { left: -115px; padding: 3px; width: 115px; height: 115px; background: rgb(63, 249, 220); transform: rotate(45deg); animation: configure-xclockwise 3s ease-in-out 0s infinite alternate; } #loading-box .spinner-box .loading-word { position: absolute; color: #ffffff; // 我在这里小改了一下文字大小和字体，注意！ font-size: 1.8rem; font-family: \u0026#39;Zhi Mang Xing\u0026#39;, cursive; } #loading-box .spinner-box .configure-core { width: 100%; height: 100%; background-color: #37474f; } div.loaded div.loading-left-bg { transform: translate(-100%, 0); } div.loaded div.loading-right-bg { transform: translate(100%, 0); } div.loaded div.spinner-box { // 你可以把这个注释掉，这样就能一直看那个动画的效果了！ display: none !important; } @keyframes configure-clockwise { 0% { transform: rotate(0); } 25% { transform: rotate(90deg); } 50% { transform: rotate(180deg); } 75% { transform: rotate(270deg); } 100% { transform: rotate(360deg); } } @keyframes configure-xclockwise { 0% { transform: rotate(45deg); } 25% { transform: rotate(-45deg); } 50% { transform: rotate(-135deg); } 75% { transform: rotate(-225deg); } 100% { transform: rotate(-315deg); } } 第四步 完成上面两步之后，动画暂时还不能生效，因为我们新增组件的时候加了个 if 判断，还记得吗？\n在配置文件的相应位置（我这里是 params 栏目底下）加上 enablePreloadingAnim: true 这个键值对，然后就可以享受这个很棒的载入动画了！\n添加返回顶部按钮 失败了,显示不了,\n更改后文章 内容显示不出来,\n且返回按钮也消失了\n调整后,文章内容能显示了,但 按钮还是显示不了\n好像是custom的位置不对吧\n第一步 位置:layouts/partials/head/script.html(没有的话从themes主题相同路径复制)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;script src=\u0026#34;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; // Check to see if the window is top if not then display button $(window).scroll(function() { if ($(this).scrollTop()) { $(\u0026#39;#back-to-top\u0026#39;).fadeIn(); } else { $(\u0026#39;#back-to-top\u0026#39;).fadeOut(); } }); // Click event to scroll to top $(\u0026#39;#back-to-top\u0026#39;).click(function() { $(\u0026#39;html, body\u0026#39;).animate({scrollTop: 0}, 1000); return false; }); \u0026lt;/script\u0026gt; 第二步 下载图片\n位置: dev\\assets\\img\\top.png\n注意图片名称 注意图片在下面代码的引用位置 图片来源: https://icon-icons.com/zh/\n第三步 位置:layouts/_default/single.html 在它的第 47 行找到了TOC的代码，在 aside 内部、TOC底部插入下面的代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 {{ define \u0026#34;right-sidebar\u0026#34; }} {{ if (.Scratch.Get \u0026#34;hasTOC\u0026#34;) }} \u0026lt;aside class=\u0026#34;sidebar right-sidebar sticky\u0026#34;\u0026gt; \u0026lt;section class=\u0026#34;widget archives\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;widget-icon\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;hash\u0026#34; }} \u0026lt;/div\u0026gt; \u0026lt;h2 class=\u0026#34;widget-title section-title\u0026#34;\u0026gt;{{ T \u0026#34;article.tableOfContents\u0026#34; }}\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;widget--toc\u0026#34;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; {{ $topImg := resources.Get (\u0026#34;img/top.png\u0026#34;) }} {{ $topImg := $topImg.Resize \u0026#34;40x\u0026#34; }} \u0026lt;a id=\u0026#34;back-to-top\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;{{ $topImg.RelPermalink }}\u0026#34; /\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/aside\u0026gt; {{ end }} {{ end }} 第四步 位置: dev\\assets\\scss\\custom.scss\n1 2 3 4 5 6 7 8 9 10 11 12 $hover: 0.2s ease-in-out; #back-to-top { bottom: -30px; right: 2px; display: none; position: absolute; border: 0; transition: transform $hover; \u0026amp;:hover { transform: translateY(-10px); } } 汉语与英语之间自动添加空格 在主题目录中的 layouts/partials/footer/footer.html 中写入以下内容\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;script\u0026gt; (function(u, c) { var d = document, t = \u0026#39;script\u0026#39;, o = d.createElement(t), s = d.getElementsByTagName(t)[0]; o.src = u; if (c) { o.addEventListener(\u0026#39;load\u0026#39;, function(e) { c(e); }); } s.parentNode.insertBefore(o, s); })(\u0026#39;//cdn.bootcss.com/pangu/4.0.7/pangu.min.js\u0026#39;, function() { pangu.spacingPage(); }); \u0026lt;/script\u0026gt; 添加返回按钮 修改后图片 第一步 位置: dev\\assets\\scss\\custom.scss 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 //-------------------------------------------------- //引入左上角返回按钮 .back-home { background: var(--card-background); border-radius: var(--tag-border-radius); color: var(--card-text-color-tertiary); margin-right: 0.1rem; margin-top: 24px; display: inline-flex; align-items: center; font-size: 1.4rem; text-transform: uppercase; padding: 10px 20px 10px 15px; transition: box-shadow 0.3s ease; box-shadow: var(--shadow-l3); \u0026amp;:hover { box-shadow: var(--shadow-l2); } svg { margin-right: 5px; width: 20px; height: 20px; } span { font-weight: 500; white-space: nowrap; } } .main-container .right-sidebar { order: 2; max-width: var(--right-sidebar-max-width); /// Display right sidebar when min-width: lg @include respond(lg) { display: flex; } } main.main { order: 1; min-width: 0; max-width: 100%; flex-grow: 1; display: flex; flex-direction: column; gap: var(--section-separation); @include respond(md) { padding-top: var(--main-top-padding); } } 文章底部相关文章添加日期 修改后样例图片 第一步 位置: layouts/partials/article-list/tile.html (没有从themes的相关位置复制)\n1 2 3 4 5 6 \u0026lt;!-- 自行增加的文章发布日期 --\u0026gt; \u0026lt;footer class=\u0026#34;article-time\u0026#34;\u0026gt; \u0026lt;time datetime=\u0026#39;{{ .Date.Format \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; }}\u0026#39;\u0026gt; {{- .context.Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/footer\u0026gt; 代码第37行左右\n热力图 参考博客Hugo Theme Stack 美化教程 (lsy22.com)添加热力图失败\n且写入下面内容后 {\\{\u0026lt; heatmap \u0026gt;}\\},网站上不会显示此标题\n代码块引入 MacOS 窗口样式 实话: 修改后不知道成没成功,好像跟之前没什么区别\n第一步 位置: dev\\assets\\img\\code-header.svg\n没有的话自己创建一个\n1 2 3 4 5 \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; version=\u0026#34;1.1\u0026#34; x=\u0026#34;0px\u0026#34; y=\u0026#34;0px\u0026#34; width=\u0026#34;450px\u0026#34; height=\u0026#34;130px\u0026#34;\u0026gt; \u0026lt;ellipse cx=\u0026#34;65\u0026#34; cy=\u0026#34;65\u0026#34; rx=\u0026#34;50\u0026#34; ry=\u0026#34;52\u0026#34; stroke=\u0026#34;rgb(220,60,54)\u0026#34; stroke-width=\u0026#34;2\u0026#34; fill=\u0026#34;rgb(237,108,96)\u0026#34;/\u0026gt; \u0026lt;ellipse cx=\u0026#34;225\u0026#34; cy=\u0026#34;65\u0026#34; rx=\u0026#34;50\u0026#34; ry=\u0026#34;52\u0026#34; stroke=\u0026#34;rgb(218,151,33)\u0026#34; stroke-width=\u0026#34;2\u0026#34; fill=\u0026#34;rgb(247,193,81)\u0026#34;/\u0026gt; \u0026lt;ellipse cx=\u0026#34;385\u0026#34; cy=\u0026#34;65\u0026#34; rx=\u0026#34;50\u0026#34; ry=\u0026#34;52\u0026#34; stroke=\u0026#34;rgb(27,161,37)\u0026#34; stroke-width=\u0026#34;2\u0026#34; fill=\u0026#34;rgb(100,200,86)\u0026#34;/\u0026gt; \u0026lt;/svg\u0026gt; 第二步 位置: dev\\assets\\scss\\custom.scss 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 //---------------------------------------------------------- //为代码块顶部添加macos样式 .article-content { .highlight:before { content: \u0026#34;\u0026#34;; display: block; background: url(../img/code-header.svg); height: 32px; width: 100%; background-size: 57px; background-repeat: no-repeat; margin-bottom: 5px; background-position: -1px 2px; } } 第二步 位置: dev\\layouts\\_default\\single.html\n没有的话从themes的文件夹的相同位置复制过来\n代码位置: 在 40行左右\n1 2 3 4 5 6 7 8 9 10 11 12 13 {{ define \u0026#34;left-sidebar\u0026#34; }} {{ if (.Scratch.Get \u0026#34;TOCEnabled\u0026#34;) }} \u0026lt;div id=\u0026#34;article-toolbar\u0026#34; style=\u0026#34;position: sticky;top: 5px;z-index: 1000;\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ .Site.BaseURL | relLangURL }}\u0026#34; class=\u0026#34;back-home\u0026#34;\u0026gt; {{ (resources.Get \u0026#34;icons/back.svg\u0026#34;).Content | safeHTML }} \u0026lt;span\u0026gt;{{ T \u0026#34;article.back\u0026#34; }}\u0026lt;/span\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; {{ else }} {{ partial \u0026#34;sidebar/left.html\u0026#34; . }} {{ end }} {{ end }} 文章顶部加载进度条 位置: layouts/partials/footer/custom.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/zhixuan2333/gh-blog@v0.1.0/js/nprogress.min.js\u0026#34; integrity=\u0026#34;sha384-bHDlAEUFxsRI7JfULv3DTpL2IXbbgn4JHQJibgo5iiXSK6Iu8muwqHANhun74Cqg\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; \u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/gh/zhixuan2333/gh-blog@v0.1.0/css/nprogress.css\u0026#34; integrity=\u0026#34;sha384-KJyhr2syt5+4M9Pz5dipCvTrtvOmLk/olWVdfhAp858UCa64Ia5GFpTN7+G4BWpE\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; /\u0026gt; \u0026lt;script\u0026gt; NProgress.start(); document.addEventListener(\u0026#34;readystatechange\u0026#34;, () =\u0026gt; { if (document.readyState === \u0026#34;interactive\u0026#34;) NProgress.inc(0.8); if (document.readyState === \u0026#34;complete\u0026#34;) NProgress.done(); }); \u0026lt;/script\u0026gt; 头像360度旋转 第一步 位置:dev/assets/scss/custom.scss\n底部\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // 头像旋转动画 鼠标在上面时 // .sidebar header .site-avatar .site-logo { // transition: transform 1.65s ease-in-out; // 旋转时间 // } // .sidebar header .site-avatar .site-logo:hover { // transform: rotate(360deg); // 旋转角度为360度 // } //-------------------------------------------------- // 头像自动旋转动画 一直自动旋转 @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } .sidebar header .site-avatar .site-logo { animation: spin 1s linear infinite; // 每隔1秒旋转360度 } //-------------------------------------------------- 标签动画 效果: 鼠标位于标签上时,标签会放大\n位置: layouts/partials/footer/custom.html\n底部位置\n1 2 3 4 5 6 7 8 9 .tagCloud .tagCloud-tags a { border-radius: 10px; font-size: 1.4rem; transition: transform .3s ease; } .tagCloud .tagCloud-tags a:hover { transform: scale(1.1, 1.1); } 距今多少天没有修改 示例图片 第一步 位置:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 \u0026lt;div class=\u0026#34;article-details\u0026#34;\u0026gt; {{ if .Params.categories }} \u0026lt;header class=\u0026#34;article-category\u0026#34;\u0026gt; {{ range (.GetTerms \u0026#34;categories\u0026#34;) }} \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34; {{ with .Params.style }}style=\u0026#34;background-color: {{ .background }}; color: {{ .color }};\u0026#34;{{ end }}\u0026gt; {{ .LinkTitle }} \u0026lt;/a\u0026gt; {{ end }} \u0026lt;/header\u0026gt; {{ end }} \u0026lt;div class=\u0026#34;article-title-wrapper\u0026#34;\u0026gt; \u0026lt;h2 class=\u0026#34;article-title\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34;\u0026gt; {{- .Title -}} \u0026lt;/a\u0026gt; \u0026lt;/h2\u0026gt; {{ with .Params.description }} \u0026lt;h3 class=\u0026#34;article-subtitle\u0026#34;\u0026gt; {{ . }} \u0026lt;/h3\u0026gt; {{ end }} \u0026lt;/div\u0026gt; {{ $showReadingTime := .Params.readingTime | default (.Site.Params.article.readingTime) }} {{ $showDate := not .Date.IsZero }} {{ $showFooter := or $showDate $showReadingTime }} {{ if $showFooter }} \u0026lt;footer class=\u0026#34;article-time\u0026#34;\u0026gt; {{ if $showDate }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--published\u0026#34;\u0026gt; {{- .Date | time.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} {{ if ne (.Lastmod.Format \u0026#34;2006-01-02 15:04:05\u0026#34;) (.Date.Format \u0026#34;2006-01-02 15:04:05\u0026#34;) }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;updateTime\u0026#34; }} \u0026lt;p\u0026gt;最后修改时间：{{ .Lastmod.Year }} 年 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Month }} 月 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Day }} 日 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Hour }} 时 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Minute }} 分 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Second }} 秒\u0026lt;/p\u0026gt; \u0026lt;!-- 计算距今已经多少天、小时、分钟、秒没有修改 --\u0026gt; {{ $lastmod := .Lastmod }} {{ $now := now }} {{ $diff := $now.Sub $lastmod }} {{ $days := div (int $diff.Seconds) 86400 }} \u0026lt;!-- 取整天数 --\u0026gt; {{ $remainingHours := div (mod (int $diff.Seconds) 86400) 3600 }} {{ $remainingMinutes := div (mod (int $diff.Seconds) 3600) 60 }} {{ $remainingSeconds := mod (int $diff.Seconds) 60 }} \u0026lt;p\u0026gt;距今已经 {{ $days }} 天 {{ $remainingHours }} 小时 {{ $remainingMinutes }} 分 {{ $remainingSeconds }} 秒没有修改\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; {{ end }} {{ if $showReadingTime }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--reading\u0026#34;\u0026gt; {{ T \u0026#34;article.readingTime\u0026#34; .ReadingTime }} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} {{ if .Site.Params.article.readingTime }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;wordAccount\u0026#34; }} \u0026lt;time class=\u0026#34;article-words\u0026#34;\u0026gt; {{ .WordCount }} 字 \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/footer\u0026gt; {{ end }} {{ if .IsTranslated }} \u0026lt;footer class=\u0026#34;article-translations\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;language\u0026#34; }} \u0026lt;div\u0026gt; {{ range .Translations }} \u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34; class=\u0026#34;link\u0026#34;\u0026gt;{{ .Language.LanguageName }}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt; {{ end }} {{ partial \u0026#34;article/components/tags\u0026#34; . }} \u0026lt;/div\u0026gt; Bug 当修改时间,不足一天时,会显示错误的未修改天数,,已经解决 一键直达顶部与底部 参考的ChatGPT\n示例图片 第一步: 创建按钮 位置: layouts/_default/baseof.html\nbaseof.html插入的位置很重要,不然显示不出来\n1 2 3 4 5 \u0026lt;!-- 一键到达顶部 --\u0026gt; \u0026lt;a href=\u0026#34;#top\u0026#34; class=\u0026#34;scroll-to-top\u0026#34; style=\u0026#34;display: none;\u0026#34;\u0026gt;↑ 到顶部\u0026lt;/a\u0026gt; \u0026lt;!-- 一键到达底部 --\u0026gt; \u0026lt;a href=\u0026#34;#bottom\u0026#34; class=\u0026#34;scroll-to-bottom\u0026#34; style=\u0026#34;display: none;\u0026#34;\u0026gt;↓ 到底部\u0026lt;/a\u0026gt; 正常显示要求\n第二步: 添加 CSS 位置:/dev/assets/scss/custom.scss\n建议在最底部\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 .scroll-to-top, .scroll-to-bottom { position: fixed; bottom: 20px; right: 20px; background-color: #f1c40f; /* 按钮背景色 */ color: white; /* 字体颜色 */ border: none; border-radius: 5px; padding: 10px; cursor: pointer; z-index: 1000; /* 确保按钮在最上层 */ } .scroll-to-top { bottom: 80px; /* 到顶部按钮的位置 */ } .scroll-to-top:hover, .scroll-to-bottom:hover { background-color: #e67e22; /* 悬停时的背景色 */ } 位置:dev/assets/scss/style.scss只负责 引入 custom.scss的内容,具体内容还是在custom.scss内填写\n不加的话,只有文字,且不会跳转\n第三步: 添加 JavaScript 位置: layouts/_default/baseof.html\n文件内位置有要求\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \u0026lt;script\u0026gt; // 页面滚动事件 window.onscroll = function() { var scrollTopBtn = document.querySelector(\u0026#39;.scroll-to-top\u0026#39;); var scrollBottomBtn = document.querySelector(\u0026#39;.scroll-to-bottom\u0026#39;); if (document.body.scrollTop \u0026gt; 20 || document.documentElement.scrollTop \u0026gt; 20) { scrollTopBtn.style.display = \u0026#34;block\u0026#34;; // 显示到顶部按钮 } else { scrollTopBtn.style.display = \u0026#34;none\u0026#34;; // 隐藏到顶部按钮 } if ((window.innerHeight + window.scrollY) \u0026gt;= document.body.offsetHeight) { scrollBottomBtn.style.display = \u0026#34;none\u0026#34;; // 隐藏到底部按钮 } else { scrollBottomBtn.style.display = \u0026#34;block\u0026#34;; // 显示到底部按钮 } }; // 滚动到顶部 document.querySelector(\u0026#39;.scroll-to-top\u0026#39;).onclick = function() { window.scrollTo({top: 0, behavior: \u0026#39;smooth\u0026#39;}); }; // 滚动到底部 document.querySelector(\u0026#39;.scroll-to-bottom\u0026#39;).onclick = function() { window.scrollTo({top: document.body.scrollHeight, behavior: \u0026#39;smooth\u0026#39;}); }; \u0026lt;/script\u0026gt; 使用简单的 JavaScript 来控制这些按钮的显示和隐藏，并实现滚动效果。\n第四步: 确保锚点存在 位置: layouts/_default/baseof.html\n文件内位置有要求\n1 2 3 4 5 6 7 \u0026lt;!-- 添加顶部锚点 --\u0026gt; \u0026lt;a id=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;!-- 其他内容 --\u0026gt; \u0026lt;!-- 添加底部锚点 --\u0026gt; \u0026lt;a id=\u0026#34;bottom\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; 博客内部 第五步 修改博客默认配置 位置:dev\\archetypes\\default.md\n1 2 3 4 5 6 7 \u0026lt;!-- 到顶部 --\u0026gt; \u0026lt;a id=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; 博客内容 \u0026lt;!-- 到底部 --\u0026gt; \u0026lt;a id=\u0026#34;bottom\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; 配置好后,一键到达底部才能用(博客内的文章)\n只要基础模版有就行\n位置:\n总结 确保你的 HTML 结构大致如下：\n有Bug 只有主页能显示 顶部 与 底部 刷新后 第一次点击 底部按钮 会变成 到达顶部,一下跳转到顶部 第二次才会到达底部 参考博客 Hugo Theme Stack 美化教程 (lsy22.com)\nHugo Stack主题更新小记 (xrg.fj.cn)\n免费图标SVG，PNG，ICO或ICNS (icon-icons.com)\n个人感想 ChatGPT永远的神,用Kimi快给我气死了,人工智障,永远回答假大空,一直做不对,ChatGPT立马给我答案 hugo的stack主题 目录只有三级显示 ChatGPT真优秀,会给出文档结构,要修改的,一目了然 开始的+++号必须在第一行,才能显示这一片博客 ","date":"2024-09-27T13:54:51+08:00","image":"https://picsum.photos/800/600.webp?random=791a4889","permalink":"https://1510882710.github.io/p/hugo%E7%9A%84stack%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E9%9B%B6%E7%A2%8E/","title":"Hugo的Stack主题美化零碎"},{"content":"购物避雷。\n风扇 扬子风扇 买后风扇 一个星期不会摇头,半个月彻底不会动了 价格 33元 平台 拼多多 教训 买东西之前对比商家店铺是否都是同一个地址(手机壳教训) 再也不在拼多多买东西(电器,手机壳) 手机 全包式手机壳 我的目的就是保护屏幕\n老年人用,所以 清晰度不在意\n防摔就行\n双面玻璃\n后壳素皮,前面玻璃\n本人实际使用体验: 我买的是 后壳素皮,前玻璃, 23元,真我GT6SE\n重量重(符合我的习惯,喜欢重的) 后壳素皮 摸起来有质感,磨砂感,喜欢 质量问题\u0026ndash;未评测(刚买三天,还没摔过,2024年9月28日10:38:41) 缺点: 前面板玻璃全是指纹,油渍,不好清理 难受,玻璃壳里面进的全是灰尘,纸屑,每天要拆下来清理,不防尘 清晰度不行,(说不上来的感觉,就是不舒服,跟原屏幕比,毕竟隔着一块玻璃) 屏幕指纹解锁不灵敏(感觉连续检测几次后才识别) 网上评论:\n使用后将屏幕磨花(千万别把手机自带的保护膜撕掉,防止磨花屏幕) 玻璃易碎,轻轻碰一下就碎 图片 翻盖式手机壳 磁吸按扣: 太松了,轻轻一甩就掉\n手机壳 型号: 真我GT Neo6 SE 全包\n价格: 23元 玻璃\n缺点: 前摄像头被玻璃挡着,\n拼多多,服务态度不好\n说官话,一直不正面,回答\n问玻璃挡着,一会让去评论区看,且 不回答是不是\n还有更难听的,图片找不到了\n详情见 下图\n拼多多商家避雷 卖全包手机壳的拼多多,基本地区都在\n深圳市福田区华强北街道荔村社区振兴路120号赛格科技园3栋6层H99号\n而且,一模一样的地址开多个店铺\n名字还都姓蔡,家族企业吧\n避雷\n这几家全是同一个店铺,同一个地址\n末尾行 ","date":"2024-09-27T12:23:32+08:00","image":"https://picsum.photos/800/600.webp?random=70ad2bf7","permalink":"https://1510882710.github.io/p/%E8%B4%AD%E7%89%A9%E9%81%BF%E9%9B%B7/","title":"购物避雷"},{"content":"成功更改全局字体\n中文: 行楷, 英文: Times New Man\n修改后的图片示例 步骤 第一步: 下载字体并保存到指定位置 霞鹜文楷：猫啃网 (maoken.com)\n霞鹜文楷github地址\n保存位置: dev\\static\\fonts\\XINGKAI.ttf\n第二步: custom.html 添加代码 位置: dev\\layouts\\partials\\head\\custom.html\n新建一个空白的custom.html就行\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;style\u0026gt; @font-face { font-family: \u0026#39;XINGKAI\u0026#39;; src: url(\u0026#39;/fonts/XINGKAI.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); /* 你的字体文件路径 */ font-weight: normal; font-style: normal; } :root { --zh-font-family: \u0026#34;XINGKAI\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Droid Sans Fallback\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;; --base-font-family: \u0026#34;Times New Roman\u0026#34;, var(--sys-font-family), var(--zh-font-family); --article-font-family: \u0026#34;Times New Roman\u0026#34;, var(--zh-font-family); } \u0026lt;/style\u0026gt; 到此时,页面就能显示你修改后的字体了\n代码解读 将 XINGKAI 替换为 你的 中文字体名称 (建议字体修改为英文名字)\n当然，我会详细解释上面提到的代码和它们的作用：\n创建字体-face规则：\n1 2 3 4 5 6 @font-face { font-family: \u0026#39;Kaiti\u0026#39;; src: url(\u0026#39;/fonts/kaiti.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); font-weight: normal; font-style: normal; } @font-face 是一个 CSS 规则，用于定义一个自定义字体。 font-family: 'Kaiti'; 为这个字体定义一个名称，这里叫做 \u0026ldquo;Kaiti\u0026rdquo;。 src: url('/fonts/kaiti.ttf') format('truetype'); 指定字体文件的位置和格式。这里假设字体文件名为 \u0026ldquo;kaiti.ttf\u0026rdquo;，并且位于网站的 \u0026ldquo;static/fonts/\u0026rdquo; 目录下。 font-weight: normal; 设置字体的粗细为正常。 font-style: normal; 设置字体的风格为正常。 设置 CSS 变量：\n1 2 3 4 5 :root { --zh-font-family: \u0026#34;Kaiti\u0026#34;, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Droid Sans Fallback\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;; --base-font-family: \u0026#34;Times New Roman\u0026#34;, var(--sys-font-family), var(--zh-font-family); --article-font-family: \u0026#34;Times New Roman\u0026#34;, var(--zh-font-family); } :root 是一个 CSS 伪类，它代表页面的根元素，通常用于定义全局样式变量。 --zh-font-family: \u0026quot;Kaiti\u0026quot;, ...; 定义一个名为 \u0026ldquo;\u0026ndash;zh-font-family\u0026rdquo; 的 CSS 变量，用于中文文本的字体。这里首先尝试使用 \u0026ldquo;Kaiti\u0026rdquo; 字体，如果用户的系统中没有安装，会依次尝试后面的字体。 --base-font-family: \u0026quot;Times New Roman\u0026quot;, var(--sys-font-family), var(--zh-font-family); 定义一个名为 \u0026ldquo;\u0026ndash;base-font-family\u0026rdquo; 的 CSS 变量，用于基础字体样式。这里首先尝试使用 \u0026ldquo;Times New Roman\u0026rdquo; 字体，然后是系统的默认字体 (\u0026ndash;sys-font-family)，最后是中文字体 (\u0026ndash;zh-font-family)。 --article-font-family: \u0026quot;Times New Roman\u0026quot;, var(--zh-font-family); 定义一个名为 \u0026ldquo;\u0026ndash;article-font-family\u0026rdquo; 的 CSS 变量，用于文章内容的字体。这里首先尝试使用 \u0026ldquo;Times New Roman\u0026rdquo; 字体，然后是中文字体 (\u0026ndash;zh-font-family)。 样式链接：\n1 \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Times+New+Roman\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; 这是一个 HTML \u0026lt;link\u0026gt; 标签，用于引入外部字体。 href 属性指定了字体文件的 URL，这里引入了 Google Fonts 提供的 \u0026ldquo;Times New Roman\u0026rdquo; 字体。 rel=\u0026quot;stylesheet\u0026quot; 表示这是一个样式表。 重启 Hugo 服务器： 当你修改了网站的配置或者 CSS 文件后，需要重启 Hugo 的本地开发服务器，以便它能够应用这些更改。在命令行中运行以下命令：\n1 hugo server 这会启动一个本地服务器，通常可以通过访问 http://localhost:1313 来查看你的网站。\n查看效果： 打开你的网站，检查字体是否已经按照你的设置更改。如果字体没有正确显示，可能需要清除浏览器缓存或者检查文件路径是否正确。\nBug 经过实验,本地能很快正常显示字体,但上传到 github 后,需要很长的时间显示修改后的字体\n末尾行 ","date":"2024-09-26T21:00:54+08:00","image":"https://picsum.photos/800/600.webp?random=882126ec","permalink":"https://1510882710.github.io/p/%E6%88%90%E5%8A%9F%E6%9B%B4%E6%94%B9%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93hugostack/","title":"成功更改全局字体HugoStack"},{"content":"更改为全局字体\n中文: 楷体\n代码: Times New Man\n具体步骤 ChatGPT给的安装方法 一、找到 CSS 文件 打开你的 Hugo 项目目录：\n在你的计算机上，找到你的 Hugo 项目文件夹。 定位 CSS 文件：\n进入 themes 文件夹，然后找到你的主题文件夹（例如 stack）。 在 stack 主题中，寻找 assets/css 或者 static/css 文件夹。 二、创建或编辑 CSS 文件 如果找到了 CSS 文件（通常是 style.css），直接编辑它。如果没有，可以新建一个 CSS 文件，命名为 custom.css。\n新建或打开 CSS 文件： 如果你创建了 custom.css，请确保它位于 assets/css/ 或 static/css/ 目录中。 三、添加字体设置代码 在你的 CSS 文件中，添加以下代码。确保把代码粘贴在文件的最顶部，以便于管理：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* 全局字体设置 */ body { font-family: \u0026#39;Times New Roman\u0026#39;, Times, serif; /* 设置英文默认字体为 Times New Roman */ } /* 自定义字体定义 */ @font-face { font-family: \u0026#39;KaiTi\u0026#39;; /* 自定义字体名称，后面将用于调用 */ src: local(\u0026#39;KaiTi\u0026#39;), url(\u0026#39;/fonts/KaiTi.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); /* 设置字体的来源路径 */ } /* 应用字体到主要文本元素 */ body, p, h1, h2, h3, h4, h5, h6 { font-family: \u0026#39;KaiTi\u0026#39;, \u0026#39;Times New Roman\u0026#39;, Times, serif; /* 设置中文优先，英文作为后备 */ } /* 设置代码块的字体 */ pre, code { font-family: \u0026#39;Times New Roman\u0026#39;, Times, serif; /* 代码部分使用 Times New Roman 字体 */ } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* 全局字体设置 */ body { font-family: \u0026#39;XINGKAI\u0026#39;, Times, serif; /* 设置英文默认字体为 Times New Roman */ } /* 自定义字体定义 */ @font-face { font-family: \u0026#39;XINGKAI\u0026#39;; /* 自定义字体名称，后面将用于调用 */ src: local(\u0026#39;XINGKAI\u0026#39;), url(\u0026#39;/fonts/XINGKAI.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); /* 设置字体的来源路径 */ } /* 应用字体到主要文本元素 */ body, p, h1, h2, h3, h4, h5, h6 { font-family: \u0026#39;XINGKAI\u0026#39;, \u0026#39;Times New Roman\u0026#39;, Times, serif; /* 设置中文优先，英文作为后备 */ } /* 设置代码块的字体 */ pre, code { font-family: \u0026#39;Times New Roman\u0026#39;, Times, serif; /* 代码部分使用 Times New Roman 字体 */ } 四、逐行解释代码 全局字体设置：\n1 2 3 body { font-family: \u0026#39;Times New Roman\u0026#39;, Times, serif; /* 设置英文默认字体为 Times New Roman */ } 作用：将网页的默认字体设置为 Times New Roman。所有未指定字体的文本将使用此字体。 定义自定义字体：\n1 2 3 4 @font-face { font-family: \u0026#39;KaiTi\u0026#39;; /* 自定义字体名称 */ src: local(\u0026#39;KaiTi\u0026#39;), url(\u0026#39;/fonts/KaiTi.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); /* 设置字体的来源 */ } 作用：引入楷体字体。font-family 指定了一个名称，你可以在后面的 CSS 中使用这个名称。 路径：确保 url('/fonts/KaiTi.ttf') 指向正确的字体文件位置。你需要将 KaiTi.ttf 放在 static/fonts/ 目录中。 应用字体到文本元素：\n1 2 3 body, p, h1, h2, h3, h4, h5, h6 { font-family: \u0026#39;KaiTi\u0026#39;, \u0026#39;Times New Roman\u0026#39;, Times, serif; /* 中文优先，英文作为后备 */ } 作用：设置网站主要文本（包括段落和标题）的字体为楷体。如果用户的浏览器无法显示楷体，将退回使用 Times New Roman。 设置代码块的字体：\n1 2 3 pre, code { font-family: \u0026#39;Times New Roman\u0026#39;, Times, serif; /* 代码部分使用 Times New Roman 字体 */ } 作用：确保所有代码块使用 Times New Roman，以增强代码的可读性。 五、添加字体文件 获取楷体字体： 找到并下载楷体字体文件（如 KaiTi.ttf）。你可以在网上搜索“楷体 字体下载”。 放置字体文件：\n将 KaiTi.ttf 文件放在 static/fonts/ 目录中。确保你的项目结构如下： 1 2 3 4 5 6 7 8 9 your-hugo-project/ ├── static/ │ └── fonts/ │ └── KaiTi.ttf ├── themes/ │ └── stack/ │ └── assets/ │ └── css/ │ └── custom.css (或 style.css) 六、重新生成网站 在你的项目目录中，打开终端或命令行，运行以下命令来查看更改效果：\n1 hugo serve 七、检查效果 在浏览器中打开你的 Hugo 网站（通常是 http://localhost:1313）。 确认： 中文内容是否显示为楷体。 英文和代码是否显示为 Times New Roman。 小提示 如果字体没有正确显示，可以检查浏览器的开发者工具（按 F12 键）查看 CSS 是否正确加载，确认字体文件路径是否正确。 如果有问题，随时告诉我，我可以进一步帮助你解决！ 其他方法1 文件 custom.html 更改 位置: ./layouts/partials/head/custom.html\n直接建一个空白的就行,主题那里就是空白的\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;style\u0026gt; :root { --sys-font-family: \u0026#34;Noto Serif SC\u0026#34;; --zh-font-family: \u0026#34;Noto Serif SC\u0026#34;; --base-font-family: \u0026#34;Noto Serif SC\u0026#34;; --code-font-family: \u0026#34;Noto Serif SC\u0026#34;; --article-font-family: \u0026#34;Noto Serif SC\u0026#34;; } \u0026lt;/style\u0026gt; \u0026lt;script\u0026gt; (function () { const customFont = document.createElement(\u0026#34;link\u0026#34;); customFont.href = \u0026#34;https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;700\u0026amp;display=swap\u0026#34;; customFont.type = \u0026#34;text/css\u0026#34;; customFont.rel = \u0026#34;stylesheet\u0026#34;; document.head.appendChild(customFont); })(); \u0026lt;/script\u0026gt; 参考博客: 【Hugo之路 番外6】hugo自定义全局字体 (gezi.men)\n这里采用的是思源宋体，可自行更换其他字体\n字体样式：https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;700\u0026amp;display=swap 字体名：Noto Serif SC，即上方链接中family=后的字符串，+替换为空格 其他方法2 Hugo Stack主题更新小记 (xrg.fj.cn)\n字体样式修改 把这一项归在文章页面似乎不太合适，因为主页的字体样式也被我更改了；但其实字体样式主要地还是与文章有关，好的字体让人看起文章来心情愉悦。 作者在 layouts/partials/footer/components/custom-font.html 中进行了字体的自定义：\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;script\u0026gt; (function () { const customFont = document.createElement(\u0026#39;link\u0026#39;); customFont.href = \u0026#34;https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700\u0026amp;display=swap\u0026#34;; customFont.type = \u0026#34;text/css\u0026#34;; customFont.rel = \u0026#34;stylesheet\u0026#34;; document.head.appendChild(customFont); }()); \u0026lt;/script\u0026gt; 他使用的字体是 Lato ，这个字体不支持中文，因此最终呈现出来的字体是平平无奇的微软雅黑（其实是作者放置的默认选项）。 更改字体的方式有几种：\n使用在线字体； 下载字体CSS并引入； 使用正常PC都会有的字体（如微软雅黑、仿宋、楷体等）。 我决定使用在线字体，首先是因为在线字体的样式比较丰富，其次是字体CSS并没有那么好找…… 科学上网 去到 Google fonts ，找到满意的中文字体，把 custom-font.html 中的原有代码注释掉，使用网站给出的代码。\n我现在的 custom-font.html 内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;!-- \u0026lt;script\u0026gt; (function () { const customFont = document.createElement(\u0026#39;link\u0026#39;); customFont.href = \u0026#34;https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700\u0026amp;display=swap\u0026#34;; customFont.type = \u0026#34;text/css\u0026#34;; customFont.rel = \u0026#34;stylesheet\u0026#34;; document.head.appendChild(customFont); }()); \u0026lt;/script\u0026gt; --\u0026gt; \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.googleapis.com\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.gstatic.com\u0026#34; crossorigin\u0026gt; \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css2?family=Long+Cang\u0026amp;family=Ma+Shan+Zheng\u0026amp;family=Noto+Sans+SC:wght@300\u0026amp;family=Noto+Serif+SC:wght@300\u0026amp;family=Zhi+Mang+Xing\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; 一次性引入了几款我认为还不错的字体，以便自由选择。 引入字体之后，来到我们的老朋友 custom.scss 文件中，把 body 和 .article-content 的字体改为我们引入的字体的名字即可。\n1 2 3 4 5 6 7 body, .article-content { // font-family: \u0026#39;Long Cang\u0026#39;, cursive; // font-family: \u0026#39;Ma Shan Zheng\u0026#39;, cursive; // font-family: \u0026#39;Noto Sans SC\u0026#39;, sans-serif; font-family: \u0026#39;Noto Serif SC\u0026#39;, serif; // font-family: \u0026#39;Zhi Mang Xing\u0026#39;, cursive; } 字体来源 霞鹜文楷 霞鹜文楷：猫啃网 (maoken.com)\n霞鹜文楷github地址\n安装字体 右键 .ttf 后缀的文件,里的安装即可\n有多个 ttf 任选一个喜欢的安装\n参考博客 Hugo Stack主题更新小记 (xrg.fj.cn) ","date":"2024-09-26T19:18:37+08:00","image":"https://picsum.photos/800/600.webp?random=ce0c89c8","permalink":"https://1510882710.github.io/p/%E6%9B%B4%E6%94%B9%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93hugostack/","title":"更改全局字体HugoStack"},{"content":"本文主要是 如何添加 文章最后修改时间 ,\n位置: 文章标题 头部 与 文章创建时间 在同一行\n修改后的样式 具体步骤 前提条件:\nhugo博客 stack主题 任何修改前建议做好备份工作\n第一步: 在config.yaml或者(hugo.yaml)添加如下配置： 文件内任意位置,建议在最底部\n1 2 3 4 5 6 7 8 9 # 文章底部的最后更新时间 # frontmatter: # lastmod: :fileModTime frontmatter: lastmod: [\u0026#34;lastmod\u0026#34;, \u0026#34;:fileModTime\u0026#34;, \u0026#34;:defalut\u0026#34;] # enableGitInfo: true # gitRepo: \u0026#34;https://github.com/iwyang/hugo\u0026#34; :fileModTime：文件修改时间 lastmod：文章里 lastmod 字段 :defalut：默认时间 第二步: details.html文件内修改 位置: dev\\layouts\\partials\\article\\components\\details.html\n(如果没有建议从themes文件夹内的相同位置复制到上面的位置)\n插入代码的具体行数有要求:\n1 2 3 4 5 6 7 8 {{ if ne (.Lastmod.Format \u0026#34;2006-01-02 15:04:05\u0026#34;) (.Date.Format \u0026#34;2006-01-02 15:04:05\u0026#34;) }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;updateTime\u0026#34; }} \u0026lt;p\u0026gt; {{ .Lastmod.Year }} 年 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Month }} 月 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Day }} 日 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Hour }} 时 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Minute }} 分 {{ printf \u0026#34;%02d\u0026#34; .Lastmod.Second }} 秒\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; {{ end }} 注意代码具体行数 在 文章创建日期代码后面\n第三步: 图标样式下载 图标下载网址: 免费图标SVG，PNG，ICO或ICNS (icon-icons.com)\n涉及到的代码\n1 {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;updateTime\u0026#34; }} updateTime 名字改为 你的图标名字\n建议 英文名字\n图标位置: dev\\assets\\icons\\updateTime.svg\n注意事项:\n图标为英文名 后缀为 svg 总结 涉及三个文件的修改\n参考博客 Hugo Stack 主题配置与使用 | Bore\u0026rsquo;s Notes 自动添加博客页面更新日期 | (yfei.page) 末尾行 ","date":"2024-09-26T18:28:54+08:00","image":"https://picsum.photos/800/600.webp?random=df2fd343","permalink":"https://1510882710.github.io/p/%E6%9C%80%E5%90%8E%E6%9B%B4%E6%96%B0%E6%97%B6%E9%97%B4-hugo/","title":"最后更新时间 Hugo"},{"content":" 这是文章的摘要部分。 摘要部分结束\n下载hugo 我用的是 不直接安装 ,通过解压缩包的形式 不设置系统环境变量 新建文章及本地部署需要的代码 在dev文件夹内 cmd\n新建文章代码\n1 hugo new content post/要修改的名称/index.md 启动本地服务\n1 hugo server -D 注意 只能用以下代码新建博客,不能修改index.md的名字,否则,无法显示\n1 hugo new content post/hugo博客总结/index.md 只能更改 \u0026ldquo;博客总结\u0026rdquo; 这几个字 只有二级标题才能显示目录 下载主题 上传到github 自动化部署github 看板娘 待解决问题 需要 2分钟 才能显示看板娘 加载速度慢,很长时间不显示 为什么使用的是本地模型,切换人物时加载速度还是那么慢 看板娘适配主题的其他内容 例如复制成功时,显示\u0026quot;记得标明出处啊\u0026quot;等 必须删除浏览器图片缓存才能出现 F12的控制台一直有报错 时灵时不灵,有时候出现有时候不出现 引入动态背景界面 实现无感刷新 标题,副标题,首页图片怎么设置 名人名言的设置 修改文章时间的设置 修改文章次数的设置 头像的上传,不用PS,用网站圈定范围 如何改变 typora的快捷键 typora放大与缩小 图像 命令汇总 样式更改 单个文章内字数统计 感谢Kimi ,让我寻找到了 博客主 Hugo Stack 主题配置与使用 | Bore\u0026rsquo;s Notes\n感谢 博客主的 详细教导\n首先 将\n图标是svg样式,网址免费图标SVG，PNG，ICO或ICNS (icon-icons.com) 代码 直接用阅读时间改的，图标路径为根目录 assets\\icons 根目录 layouts\\partials\\article\\components\\details.html\n1 2 3 4 5 6 7 8 9 {{ if .Site.Params.article.readingTime }} \u0026lt;div\u0026gt; // pencil 改为 自己设置的图标名称 {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;pencil\u0026#34; }} \u0026lt;time class=\u0026#34;article-words\u0026#34;\u0026gt; {{ .WordCount }} 字 \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} 然后在在config.yaml或者(hugo.yaml)添加如下配置：中加入一行，以正确显示中文字符数量 表示该网站启用了对中日韩（CJK）语言的支持。 1 hasCJKLanguage: true config.yaml 中确保 readingTime: true 自定义全局字体 这里采用的是思源宋体，可自行更换其他字体\n字体样式：https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;700\u0026amp;display=swap 字体名：Noto Serif SC，即上方链接中family=后的字符串，+替换为空格 在站点根目录新建文件 ./layouts/partials/head/custom.html，内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;style\u0026gt; :root { --sys-font-family: \u0026#34;Noto Serif SC\u0026#34;; --zh-font-family: \u0026#34;Noto Serif SC\u0026#34;; --base-font-family: \u0026#34;Noto Serif SC\u0026#34;; --code-font-family: \u0026#34;Noto Serif SC\u0026#34;; --article-font-family: \u0026#34;Noto Serif SC\u0026#34;; } \u0026lt;/style\u0026gt; \u0026lt;script\u0026gt; (function () { const customFont = document.createElement(\u0026#34;link\u0026#34;); customFont.href = \u0026#34;https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;700\u0026amp;display=swap\u0026#34;; customFont.type = \u0026#34;text/css\u0026#34;; customFont.rel = \u0026#34;stylesheet\u0026#34;; document.head.appendChild(customFont); })(); \u0026lt;/script\u0026gt; 楷体 博客魔改美化（通用） | Naive Koala (xalaok.top)\n鼠标样式 博客魔改美化（通用） | Naive Koala (xalaok.top)\n热力图 博客魔改美化（通用） | Naive Koala (xalaok.top)\n阅读时长 最后更新时间 待改进,添加到首页上\n代码 在config.yaml或者(hugo.yaml)添加如下配置：\n1 2 frontmatter: lastmod: :fileModTime hugo摘要官方文档 内容概要|雨果 \u0026mdash; Content summaries | Hugo (gohugo.io)\n给已建立文章设置副标题 2024年9月26日13:12:39\n成功\n1 description = \u0026#39;这是一个副标题\u0026#39; 标签 tags 1 2 3 4 5 6 tags = [ \u0026#34;markdown\u0026#34;, \u0026#34;css\u0026#34;, \u0026#34;html\u0026#34;, \u0026#34;themes\u0026#34;, ] 自定义标签,在标签云上显示 标签会自定义,随意输入,会自动添加到标签云 标签自动首字母大写 标签显示在文章首页界面 标签默认在文章末尾显示\n分类 categories 主页上边就属于分类\n1 2 3 4 categories = [ \u0026#34;themes\u0026#34;, \u0026#34;syntax\u0026#34;, ] 添加自定义分类categories 为categories添加介绍 在 content/categories/分类名 下新建文件 _index.md，内容如下：\n1 2 3 4 5 --- title: \u0026#34;分类名\u0026#34; description: \u0026#34;简介 Blablabla\u0026#34; image: \u0026#34;https://picsum.photos/800/600.webp?random={{ substr (md5 (.Date)) 4 8 }}\u0026#34; --- 如果是标签，就在 content/tags/标签名 下创建 _index.md。\n文章首页图片 1 2 image = \u0026#34;pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg\u0026#34; image: https://picsum.photos/800/600.webp?random={{ substr (md5 (.Date)) 4 8 }} 随机图片的参考链接: Hugo Stack 主题美化 (limuran.top)\nPJAX 无感刷新 目前遇到的问题\n刚开始时成功,但加载了动态背景之后 失败了, 不能无感刷新了 文章标题上方的图片 1 image: https://picsum.photos/800/600.webp?random={{ substr (md5 (.Date)) 4 8 }} 动态背景 layouts/partials/footer/custom.html 中增加以下内容:\n彩虹动态背景\n1 2 3 4 5 6 7 8 9 \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/zhixuan2333/gh-blog@v0.1.0/js/ribbon.min.js\u0026#34; integrity=\u0026#34;sha384-UEK8ZiP3VgFNP8KnKMKDmd4pAUAOJ59Y2Jo3ED2Z5qKQf6HLHovMxq7Beb9CLPUe\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; size=\u0026#34;300\u0026#34; alpha=\u0026#34;0.6\u0026#34; zindex=\u0026#34;-1\u0026#34; defer \u0026gt;\u0026lt;/script\u0026gt; 不用 在意是否多个script会重复,不对 因为是内部的src 写 文件路径 要加上 esc键的分号 滚动条美化 位置: 右侧\n改变后的图片示例\n代码 注意将\\dev\\themes\\hugo-theme-stack\\assets\\scss\\custom.scss复制到dev\\assets\\scss\\custom.scss下再修改 不要在原主题下修改,要在自己的主文件夹下修改,方便后续主题升级 待改进 没看到哪里美化了,\n想要彩色进度条\n选中文本样式美化 默认选中文本的样式是蓝底白字的，与博客风格显得比较突兀，所以也可以改一下。\nassets/scss/custom.scss 添加以下内容：\n1 2 3 4 ::selection { color: #ffff; background: #557697; } 主页右上方搜索菜单栏美化 搜索时会变蓝\n左侧搜索栏不会变化\nassets/scss/custom.scss\n1 2 3 4 5 6 7 .search-form.widget { transition: transform 0.6s ease; } .search-form.widget:hover { transform: scale(1.1, 1.1); } 归档动画与页面双栏 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // 动画 .widget.archives .widget-archive--list { transition: transform .3s ease; } .widget.archives .widget-archive--list:hover { transform: scale(1.05, 1.05); } // 双栏 @media (min-width: 1024px) { .article-list--compact { display: grid; grid-template-columns: 1fr 1fr; background: none; box-shadow: none; gap: 1rem; article { background: var(--card-background); border: none; box-shadow: var(--shadow-l2); margin-bottom: 8px; border-radius: 16px; } } } 图片对比\n博客内的字数统计 我感觉应该在 stack 模版上更改\n步骤\n看stack的中文文档 顺便写写图片,副标题等 代码 位置: footer/footer.html\n1 2 3 4 5 6 7 8 9 \u0026lt;!-- Add total page and word count time --\u0026gt; \u0026lt;section class=\u0026#34;totalcount\u0026#34;\u0026gt; {{$scratch := newScratch}} {{ range (where .Site.Pages \u0026#34;Kind\u0026#34; \u0026#34;page\u0026#34; )}} {{$scratch.Add \u0026#34;total\u0026#34; .WordCount}} {{ end }} 发表了{{ len (where .Site.RegularPages \u0026#34;Section\u0026#34; \u0026#34;post\u0026#34;) }}篇文章 · 总计{{ div ($scratch.Get \u0026#34;total\u0026#34;) 1000.0 | lang.FormatNumber 2 }}k字 \u0026lt;/section\u0026gt; 在assets/scss/partials/footer.scss里修改风格：\n1 2 3 4 5 .totalcount { color: var(--card-text-color-secondary); font-weight: normal; margin-bottom: 5px; } 无感刷新-文章统计 1 totalcount 待改进 将文字移动到上方 改变颜色与样式 取消掉左下角 两个重复的 文字 添加网站运行多长时间 位置: 博客左下角\n参考博客: Hugo Stack主题装修笔记 (thirdshire.com)\nCTRl + 鼠标左键 跳转到网页\n涉及的4个文档位置:\nlayouts/partials/footer/custom.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;!-- Add blog running time --\u0026gt; \u0026lt;script\u0026gt; let s1 = \u0026#39;2024-9-23\u0026#39;; //website start date s1 = new Date(s1.replace(/-/g, \u0026#34;/\u0026#34;)); let s2 = new Date(); let timeDifference = s2.getTime() - s1.getTime(); let days = Math.floor(timeDifference / (1000 * 60 * 60 * 24)); let hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)); let minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60)); let result = days + \u0026#34;天\u0026#34; + hours + \u0026#34;小时\u0026#34; + minutes + \u0026#34;分钟\u0026#34;; document.getElementById(\u0026#39;runningdays\u0026#39;).innerHTML = result; \u0026lt;/script\u0026gt; layouts/partials/footer/footer.html\n1 2 3 4 5 \u0026lt;!-- Add blog running time --\u0026gt; \u0026lt;section class=\u0026#34;running-time\u0026#34;\u0026gt; 本博客已稳定运行 \u0026lt;span id=\u0026#34;runningdays\u0026#34; class=\u0026#34;running-days\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/section\u0026gt; assets/scss/partials/footer.scss\n1 2 3 4 5 6 7 8 9 .running-time { color: var(--card-text-color-secondary); font-weight: normal; .running-days { font-weight:bold; color: var(--emphasize-text-color); } } assets/scss/variables.scss\n1 2 3 4 5 6 7 --accent-color-text: #fff; --body-text-color: #b0b0b0; --emphasize-text-color: #9e8f9f; // Add emphasize font color \u0026amp;[data-scheme=\u0026#34;dark\u0026#34;] { --emphasize-text-color: #d5cfc4; // Add emphasize font color for dark scheme } 知识点:\n可以多个 Bug细节 页面不显示时间 在 custom.html下添加\n1 {{ partial \u0026#34;footer/footer.html\u0026#34; . }} 页面显示时间\n此时 使用 PJAX 无感刷新 会导致时间再次显示不出来\nPJAX 无感刷新添加时间 1 2 running-time running-days 待改进 将安全运行放到博客上面 显示运行了多少秒 Bug 1 \u0026lt;script\u0026gt; \u0026lt;script\u0026gt;\n反正就是不能有单独 的 \u0026lt; script \u0026gt;\n每页显示多少篇文章 只有 paginate有效,最新版,2024年9月26日13:06:33 是文章主页面 默认创建的index.md内容 位置: dev\\archetypes\\default.md\n以后创建的文档都包含如下内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 +++ title = \u0026#39;{{ replace .File.ContentBaseName \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#39; date = {{ .Date }} author = \u0026#34;wfg\u0026#34; description = \u0026#34;这是副标题-头文件.\u0026#34; tags = [ \u0026#34;html\u0026#34;, \u0026#34;themes\u0026#34;, ] categories = [ \u0026#34;themes\u0026#34;, \u0026#34;syntax\u0026#34;, ] image = \u0026#34;https://picsum.photos/800/600.webp?random={{ substr (md5 (.Date)) 4 8 }}\u0026#34; draft = true +++ 这是文章的摘要部分。 \u0026lt;!--more--\u0026gt; 随想 看板娘在github上挺快的 以后用ssh提交,挺快的,稳定 github的博客提交后 有延迟,大概 1 分钟 小狗图标 标签页 也调教上去了 既然在github上挺快的,那就先不改了,就这样子 看板娘\n打字机模式: 让鼠标一直在屏幕正中间,也就是说,要打字的地方会一直显示在正中间 hugo的博客可以写中文 动态背景引入后 PJAX无感刷新消失 如何删除已经写好的博客 如何删除标签,为标签排序,有目的展示标签 默认创建的index.md内容 页面博客阿内搜索 直接在网页上用 CTRl + F 博客字数统计 直接写一级标题 看看能不能显示到目录上 自动部署到github上的命令 与 标题 博客的图片与 副标题 与 标签 以后只要保证 这个 文件夹不被删除就行 缩小看板娘的大小 typora的自动保存 开启博客的评论功能 statck主题的暗色模式移动到 右上角 删除stack的左下角语言切换,只保留 中文 当提交后 发现 博客 无法显示 如何回退 实际上 就是 git 返回到上一分支 每次提交的分支名称记录 网页标签的 狗图案的 位置 \\hugo_extended_0.134.3_windows-amd64\\dev\\static html的位置暂时没找到 tupora如何复制代码 bug 看板娘挪动后,鼠标 无法点击 目录 ,按住左键,即使 鼠标不再看板娘的位置,依然会挪动看板娘 时间: 两个 添加网站运行时间 后 而且 在看板娘 原位置,,即使看板娘不再,依然 不能跳转目录,会移动 看板娘 bug 个人看法,后面无法显示 Hbuilder 整体代码移动 Shift + Tab 左移 Tab 右移 博客想要的模版 的 个人看法 还是hugo好用,用hexo,图片一直显示不了, hexo的npm安装超级慢,等了好几分钟,且容易报错,还不知道哪里错了 hugo随时编写,安装简单,且编写实时显示到网址上 最重要的是,图片一次成功显示,不用浪费那么长的时间 ","date":"2024-09-24T19:09:47+08:00","image":"https://picsum.photos/800/600.webp?random={{ substr (md5 (.Date)) 4 8 }}","permalink":"https://1510882710.github.io/p/hugosubmit/","title":"hugoSubmit"},{"content":"下载hugo 我用的是 不直接安装 ,通过解压缩包的形式 不设置系统环境变量 新建文章及本地部署需要的代码 在dev文件夹内 cmd\n新建文章代码\n1 hugo new content post/要修改的名称/index.md 启动本地服务\n1 hugo server -D 注意 只能用以下代码新建博客,不能修改index.md的名字,否则,无法显示\n1 hugo new content post/hugo博客总结/index.md 只能更改 \u0026ldquo;博客总结\u0026rdquo; 这几个字 只有二级标题才能显示目录 下载主题 上传到github 自动化部署github 看板娘 待解决问题 需要 2分钟 才能显示看板娘 加载速度慢,很长时间不显示\n为什么使用的是本地模型,切换人物时加载速度还是那么慢\n看板娘适配主题的其他内容 例如复制成功时,显示\u0026quot;记得标明出处啊\u0026quot;等\n必须删除浏览器图片缓存才能出现\nF12的控制台一直有报错\n时灵时不灵,有时候出现有时候不出现\n引入动态背景界面\n实现无感刷新\n标题,副标题,首页图片怎么设置\n名人名言的设置\n修改文章时间的设置\n修改文章次数的设置\n头像的上传,不用PS,用网站圈定范围\n如何改变 typora的快捷键\n命令汇总 个人看法 还是hugo好用,用hexo,图片一直显示不了, hexo的npm安装超级慢,等了好几分钟,且容易报错,还不知道哪里错了 hugo随时编写,安装简单,且编写实时显示到网址上 最重要的是,图片一次成功显示,不用浪费那么长的时间 ","date":"2024-09-24T19:09:47+08:00","permalink":"https://1510882710.github.io/p/hugo%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93/","title":"Hugo博客总结"},{"content":"二级标题 只有二级标题能显示目录\n代码测试 自动化部署提交\n1 2 3 4 5 6 git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin {你的github仓库地址} git push -u origin main 图片显示测试 超链接链接测试 魏富贵的github\n","date":"2024-09-24T12:17:26+08:00","permalink":"https://1510882710.github.io/p/secondblogauto/","title":"SecondBlogAuto"},{"content":"first title 1111\nsecond 第二篇章\n","date":"2024-09-23T19:39:04+08:00","permalink":"https://1510882710.github.io/p/myfirstblog/","title":"MyFirstBlog"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://1510882710.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu4699868770670889127.jpg","permalink":"https://1510882710.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://1510882710.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://1510882710.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://1510882710.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu10664154974910995856.jpg","permalink":"https://1510882710.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://1510882710.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://1510882710.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://1510882710.github.io/p/emoji-support/","title":"Emoji Support"}]